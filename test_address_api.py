#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∏–∑ —Å—Å—ã–ª–æ–∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
"""

import requests
import json

# URL API
API_BASE = "http://localhost:8001/api/extract-address"

# –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
test_urls = [
    # –û–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º text
    "https://yandex.ru/maps/213/moscow/?ll=37.617635%2C55.755814&z=16&text=—É–ª–∏—Ü–∞%20–¢–≤–µ—Ä—Å–∫–∞—è%2C%201",
    
    # –°—Å—ã–ª–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (–æ–±—Ä–∞—Ç–Ω–æ–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ)
    "https://yandex.ru/maps/213/moscow/?ll=37.617635%2C55.755814&z=16",
    
    # –°—Å—ã–ª–∫–∞ —Å –∞–¥—Ä–µ—Å–æ–º –≤ –ø—É—Ç–∏
    "https://yandex.ru/maps/213/moscow/—É–ª–∏—Ü–∞%20–¢–≤–µ—Ä—Å–∫–∞—è%2C%201",
    
    # –ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ (—Ç—Ä–µ–±—É–µ—Ç –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥)
    "https://yandex.ru/maps/-/CHXXEC87",
    
    # –ï—â–µ –æ–¥–Ω–∞ –∫–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞
    "https://yandex.ru/maps/-/CCuC8K~",
]

def test_address_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∏–∑ —Å—Å—ã–ª–æ–∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç")
    print("=" * 60)
    
    for i, url in enumerate(test_urls, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {url}")
        print("-" * 40)
        
        try:
            response = requests.get(f"{API_BASE}?url={url}", timeout=30)
            
            if response.status_code == 200:
                data = response.json()
                if data.get("success"):
                    print(f"‚úÖ –£–°–ü–ï–•: {data['address']}")
                else:
                    print(f"‚ùå –û–®–ò–ë–ö–ê: {data.get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            else:
                print(f"‚ùå HTTP {response.status_code}: {response.text}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ –¢–ê–ô–ú–ê–£–¢: –ó–∞–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è")
        except requests.exceptions.ConnectionError:
            print("üîå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        except Exception as e:
            print(f"üí• –û–®–ò–ë–ö–ê: {str(e)}")

def test_api_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API...")
    try:
        response = requests.get("http://localhost:8001/")
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API: {e}")
        return False

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API
    if test_api_status():
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
        test_address_extraction()
    else:
        print("\n‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω:")
        print("   cd backend && python3 -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload") 