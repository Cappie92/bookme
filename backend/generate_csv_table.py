#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CSV —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
"""

from database import SessionLocal
from models import User, UserRole, Master, IndieMaster, Salon
import csv
from datetime import datetime

def generate_csv_table():
    db = SessionLocal()
    
    try:
        print("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è CSV —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ")
        print("=" * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.query(User).filter(User.role != UserRole.ADMIN).all()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ä–æ–ª—è–º
        clients = [u for u in users if u.role == UserRole.CLIENT]
        masters = [u for u in users if u.role == UserRole.MASTER]
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Å—Ç–µ—Ä–∞—Ö
        master_info = {}
        for master in db.query(Master).all():
            master_info[master.user_id] = "–°–∞–ª–æ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä"
        
        for indie_master in db.query(IndieMaster).all():
            if indie_master.user_id in master_info:
                master_info[indie_master.user_id] = "–ì–∏–±—Ä–∏–¥–Ω—ã–π –º–∞—Å—Ç–µ—Ä"
            else:
                master_info[indie_master.user_id] = "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–ª–æ–Ω–∞—Ö
        salon_info = {}
        for salon in db.query(Salon).all():
            salon_info[salon.id] = salon.name
        
        # –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ CSV —Ñ–∞–π–ª–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π –¥–æ—Å—Ç—É–ø–∞...")
        
        with open('test_system_access.csv', 'w', newline='', encoding='utf-8') as csvfile:
            fieldnames = ['‚Ññ', 'Email', '–ü–∞—Ä–æ–ª—å', '–§–ò–û', '–†–æ–ª—å', '–¢–∏–ø', '–¢–µ–ª–µ—Ñ–æ–Ω', '–ì–æ—Ä–æ–¥', '–û–ø–∏—Å–∞–Ω–∏–µ']
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            
            writer.writeheader()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
            for i, client in enumerate(clients, 1):
                writer.writerow({
                    '‚Ññ': i,
                    'Email': client.email,
                    '–ü–∞—Ä–æ–ª—å': 'test123',
                    '–§–ò–û': client.full_name,
                    '–†–æ–ª—å': '–ö–ª–∏–µ–Ω—Ç',
                    '–¢–∏–ø': '',
                    '–¢–µ–ª–µ—Ñ–æ–Ω': client.phone,
                    '–ì–æ—Ä–æ–¥': '',
                    '–û–ø–∏—Å–∞–Ω–∏–µ': '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç'
                })
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
            for i, master in enumerate(masters, 1):
                master_type = master_info.get(master.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                writer.writerow({
                    '‚Ññ': i + len(clients),
                    'Email': master.email,
                    '–ü–∞—Ä–æ–ª—å': 'test123',
                    '–§–ò–û': master.full_name,
                    '–†–æ–ª—å': '–ú–∞—Å—Ç–µ—Ä',
                    '–¢–∏–ø': master_type,
                    '–¢–µ–ª–µ—Ñ–æ–Ω': master.phone,
                    '–ì–æ—Ä–æ–¥': '',
                    '–û–ø–∏—Å–∞–Ω–∏–µ': f'–¢–µ—Å—Ç–æ–≤—ã–π {master_type.lower()}'
                })
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–∞–ª–æ–Ω–æ–≤
            salon_owners = db.query(User).filter(User.role == UserRole.ADMIN, User.email.like('salon%@test.com')).all()
            for i, owner in enumerate(salon_owners, 1):
                writer.writerow({
                    '‚Ññ': i + len(clients) + len(masters),
                    'Email': owner.email,
                    '–ü–∞—Ä–æ–ª—å': 'test123',
                    '–§–ò–û': owner.full_name,
                    '–†–æ–ª—å': '–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–ª–æ–Ω–∞',
                    '–¢–∏–ø': '',
                    '–¢–µ–ª–µ—Ñ–æ–Ω': owner.phone,
                    '–ì–æ—Ä–æ–¥': '–ú–æ—Å–∫–≤–∞',
                    '–û–ø–∏—Å–∞–Ω–∏–µ': '–í–ª–∞–¥–µ–ª–µ—Ü —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∞–ª–æ–Ω–∞'
                })
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–∞–ª–æ–Ω—ã
            salons = db.query(Salon).all()
            for i, salon in enumerate(salons, 1):
                writer.writerow({
                    '‚Ññ': i + len(clients) + len(masters) + len(salon_owners),
                    'Email': salon.email,
                    '–ü–∞—Ä–æ–ª—å': '',
                    '–§–ò–û': salon.name,
                    '–†–æ–ª—å': '–°–∞–ª–æ–Ω',
                    '–¢–∏–ø': '',
                    '–¢–µ–ª–µ—Ñ–æ–Ω': salon.phone,
                    '–ì–æ—Ä–æ–¥': salon.city,
                    '–û–ø–∏—Å–∞–Ω–∏–µ': '–¢–µ—Å—Ç–æ–≤—ã–π —Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã'
                })
        
        print("‚úÖ CSV —Ñ–∞–π–ª 'test_system_access.csv' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –ö–ª–∏–µ–Ω—Ç–æ–≤: {len(clients)}")
        print(f"   ‚Ä¢ –ú–∞—Å—Ç–µ—Ä–æ–≤: {len(masters)}")
        print(f"   ‚Ä¢ –í–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–∞–ª–æ–Ω–æ–≤: {len(salon_owners)}")
        print(f"   ‚Ä¢ –°–∞–ª–æ–Ω–æ–≤: {len(salons)}")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(clients) + len(masters) + len(salon_owners) + len(salons)}")
        
        print("\n‚úÖ –í—Å–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Å–æ–¥–µ—Ä–∂–∞—Ç 10 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ +7 (—Ñ–æ—Ä–º–∞—Ç: +7XXXXXXXXXX)")
        
        return {
            'clients': clients,
            'masters': masters,
            'owners': salon_owners,
            'salons': salons
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ CSV —Ç–∞–±–ª–∏—Ü—ã: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    generate_csv_table()
