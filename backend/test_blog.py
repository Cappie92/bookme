import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∞
admin_credentials = {
    "phone": "+79999999999",
    "password": "1JaK999myproject"
}

def login_admin():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞"""
    response = requests.post(f"{BASE_URL}/auth/login", json=admin_credentials)
    if response.status_code == 200:
        data = response.json()
        return data["access_token"]
    else:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        return None

def create_test_post(token):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏"""
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json"
    }
    
    test_post = {
        "title": "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏",
        "subtitle": "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã",
        "excerpt": "–£–∑–Ω–∞–π—Ç–µ, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏. –°–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞.",
        "author_id": 1,  # ID –∞–¥–º–∏–Ω–∞
        "content": """
        <h2>–í–≤–µ–¥–µ–Ω–∏–µ</h2>
        <p>–í—ã–±–æ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏ - —ç—Ç–æ –≤–∞–∂–Ω—ã–π —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å –≤–ø–µ—Ä–µ–¥. –í —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ –Ω–∞–π—Ç–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—Å—Ç –∏–¥–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä–∏–∂–∫—É –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å.</p>
        
        <h2>–û–ø—ã—Ç –∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è</h2>
        <p>–ü–µ—Ä–≤–æ–µ, –Ω–∞ —á—Ç–æ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ - —ç—Ç–æ –æ–ø—ã—Ç –º–∞—Å—Ç–µ—Ä–∞. –û–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∑–Ω–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å—Ç—Ä–∏–∂–∫–∏ –∏ –º–æ–∂–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ–¥ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –≤–æ–ª–æ—Å –∏ —Ñ–æ—Ä–º—É –ª–∏—Ü–∞.</p>
        
        <h2>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç</h2>
        <p>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –º–∞—Å—Ç–µ—Ä–∞. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –µ–≥–æ —Å—Ç–∏–ª—å –∏ —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Ä–∞–±–æ—Ç –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è.</p>
        
        <h2>–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>
        <p>–ß–∏—Ç–∞–π—Ç–µ –æ—Ç–∑—ã–≤—ã –¥—Ä—É–≥–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤. –û–Ω–∏ –º–æ–≥—É—Ç —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Ç–æ–º, –∫–∞–∫ –º–∞—Å—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –≤–æ–ª–æ—Å –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º –∫–ª–∏–µ–Ω—Ç–æ–≤.</p>
        
        <h2>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å—Ç—Ä–∏–∂–∫–æ–π</h2>
        <p>–•–æ—Ä–æ—à–∏–π –º–∞—Å—Ç–µ—Ä –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ–¥–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã. –û–Ω —Ä–∞—Å—Å–ø—Ä–æ—Å–∏—Ç –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö, –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏ –∏ —É—Ö–æ–¥–µ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏.</p>
        
        <h2>–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</h2>
        <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞ - —ç—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ –≤–∞—à –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É. –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å —Å –≤—ã–±–æ—Ä–æ–º –∏ –¥–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º.</p>
        """,
        "tags": ["—Å—Ç—Ä–∏–∂–∫–∞", "–º–∞—Å—Ç–µ—Ä", "—Å–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã", "—Å–æ–≤–µ—Ç—ã"],
        "meta_title": "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏ - —Å–æ–≤–µ—Ç—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤",
        "meta_description": "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –æ–ø—ã—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏. –°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã.",
        "og_title": "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏",
        "og_description": "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∏–∂–∫–µ –≤–æ–ª–æ—Å",
        "twitter_title": "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å—Ç—Ä–∏–∂–∫–∏",
        "twitter_description": "–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∏–∂–∫–µ"
    }
    
    response = requests.post(f"{BASE_URL}/admin/blog/posts", headers=headers, json=test_post)
    
    if response.status_code == 200:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        post_data = response.json()
        print(f"ID —Å—Ç–∞—Ç—å–∏: {post_data['id']}")
        print(f"Slug: {post_data['slug']}")
        print(f"SEO –æ—Ü–µ–Ω–∫–∞: {post_data['seo_score']}%")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {post_data['word_count']}")
        print(f"–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è: {post_data['reading_time']} –º–∏–Ω")
        return post_data['id']
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏: {response.status_code}")
        print(response.text)
        return None

def publish_post(token, post_id):
    """–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏"""
    headers = {
        "Authorization": f"Bearer {token}"
    }
    
    response = requests.post(f"{BASE_URL}/admin/blog/posts/{post_id}/publish", headers=headers)
    
    if response.status_code == 200:
        print("‚úÖ –°—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        data = response.json()
        print(f"Ping —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {data.get('ping_results', {})}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {response.status_code}")
        print(response.text)

def get_posts(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π"""
    headers = {
        "Authorization": f"Bearer {token}"
    }
    
    response = requests.get(f"{BASE_URL}/admin/blog/posts", headers=headers)
    
    if response.status_code == 200:
        posts = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(posts)}")
        for post in posts:
            print(f"- {post['title']} ({post['status']}) - SEO: {post['seo_score']}%")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π: {response.status_code}")

def get_tags(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–≥–æ–≤"""
    headers = {
        "Authorization": f"Bearer {token}"
    }
    
    response = requests.get(f"{BASE_URL}/admin/blog/tags", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–µ–≥–æ–≤: {len(data['tags'])}")
        print(f"–¢–µ–≥–∏: {', '.join(data['tags'])}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–≥–æ–≤: {response.status_code}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–≥-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞...")
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    token = login_admin()
    if not token:
        return
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
    post_id = create_test_post(token)
    if post_id:
        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏
        publish_post(token, post_id)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π
        get_posts(token)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–≥–æ–≤
        get_tags(token)
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 