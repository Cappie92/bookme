import requests
from datetime import datetime

def test_email_verification_flow():
    base_url = "http://localhost:8000"
    
    print("=== –¢–ï–°–¢ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò EMAIL –ò –°–ë–†–û–°–ê –ü–ê–†–û–õ–Ø ===")
    
    # 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    user_data = {
        "email": "test_verification@example.com",
        "phone": "+79999999997",
        "password": "testpassword123",
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "role": "client"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/register", json=user_data)
        print(f"–°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            print("üìß –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return
    
    # 2. –ó–∞–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print("\n2. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å—å–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    
    resend_data = {
        "email": "test_verification@example.com"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/resend-verification", json=resend_data)
        print(f"–°—Ç–∞—Ç—É—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 3. –ó–∞–ø—Ä–æ—Å —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    print("\n3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è")
    
    reset_data = {
        "email": "test_verification@example.com"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/request-password-reset", json=reset_data)
        print(f"–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    try:
        # –õ–æ–≥–∏–Ω–∏–º—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
        login_data = {
            "phone": "+79999999997",
            "password": "testpassword123"
        }
        
        response = requests.post(f"{base_url}/auth/login", json=login_data)
        
        if response.status_code == 200:
            token_data = response.json()
            access_token = token_data["access_token"]
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            headers = {"Authorization": f"Bearer {access_token}"}
            response = requests.get(f"{base_url}/auth/users/me", headers=headers)
            
            if response.status_code == 200:
                user_info = response.json()
                is_verified = user_info.get("is_verified", False)
                print(f"–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {is_verified}")
                
                if not is_verified:
                    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π")
                else:
                    print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {response.text}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    print("\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===")
    print("üìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º")


def test_verification_with_invalid_token():
    base_url = "http://localhost:8000"
    
    print("\n=== –¢–ï–°–¢ –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò –° –ù–ï–î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–´–ú –¢–û–ö–ï–ù–û–ú ===")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å email —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    verify_data = {
        "token": "invalid_token_12345"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/verify-email", json=verify_data)
        print(f"–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if not result["success"]:
                print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
            else:
                print("‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")


def test_password_reset_with_invalid_token():
    base_url = "http://localhost:8000"
    
    print("\n=== –¢–ï–°–¢ –°–ë–†–û–°–ê –ü–ê–†–û–õ–Ø –° –ù–ï–î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–´–ú –¢–û–ö–ï–ù–û–ú ===")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    reset_data = {
        "token": "invalid_token_12345",
        "new_password": "newpassword123"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/reset-password", json=reset_data)
        print(f"–°—Ç–∞—Ç—É—Å —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if not result["success"]:
                print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
            else:
                print("‚ùå –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")


if __name__ == "__main__":
    test_email_verification_flow()
    test_verification_with_invalid_token()
    test_password_reset_with_invalid_token() 