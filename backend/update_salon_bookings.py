#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π —Å–∞–ª–æ–Ω–∞:
- –ù–∞–∑–Ω–∞—á–∞–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞
- –î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–º–µ—Ç–∫–∏ –æ —Ç–æ–º, —á—Ç–æ —É—Å–ª—É–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–ª "–õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä"
"""

import sqlite3
from pathlib import Path
from datetime import datetime
import random

def update_salon_bookings():
    """–û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å–∞–ª–æ–Ω–∞, –Ω–∞–∑–Ω–∞—á–∞—è –º–∞—Å—Ç–µ—Ä–æ–≤"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = Path(__file__).parent / "bookme.db"
    
    print(f"üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Å–∞–ª–æ–Ω–∞ –≤ –±–∞–∑–µ: {db_path}")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å–∞–ª–æ–Ω–∞ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞
        print("\n1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å–∞–ª–æ–Ω–∞ –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞...")
        
        cursor.execute("""
            SELECT id, salon_id, service_id, start_time, end_time, status, notes
            FROM bookings 
            WHERE salon_id IS NOT NULL AND master_id IS NULL
            ORDER BY salon_id, start_time
        """)
        
        bookings = cursor.fetchall()
        print(f"   –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(bookings)}")
        
        if not bookings:
            print("   –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
            return
        
        # 2. –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∞–ª–æ–Ω–∞
        print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∞–ª–æ–Ω–∞...")
        
        # –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å–∞–ª–æ–Ω–∞ 1
        cursor.execute("""
            SELECT m.id, m.user_id, u.full_name
            FROM masters m
            JOIN users u ON m.user_id = u.id
            JOIN salon_masters sm ON m.id = sm.master_id
            WHERE sm.salon_id = 1
        """)
        salon1_masters = cursor.fetchall()
        print(f"   –ú–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ 1: {len(salon1_masters)}")
        
        # –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å–∞–ª–æ–Ω–∞ 2
        cursor.execute("""
            SELECT m.id, m.user_id, u.full_name
            FROM masters m
            JOIN users u ON m.user_id = u.id
            JOIN salon_masters sm ON m.id = sm.master_id
            WHERE sm.salon_id = 2
        """)
        salon2_masters = cursor.fetchall()
        print(f"   –ú–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ 2: {len(salon2_masters)}")
        
        # 3. –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
        print("\n3Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏, –Ω–∞–∑–Ω–∞—á–∞—è –º–∞—Å—Ç–µ—Ä–æ–≤...")
        
        updated_count = 0
        skipped_count = 0
        
        for booking in bookings:
            booking_id, salon_id, service_id, start_time, end_time, status, notes = booking
            
            # –í—ã–±–∏—Ä–∞–µ–º –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —Å–∞–ª–æ–Ω–∞
            if salon_id == 1:
                available_masters = salon1_masters
            elif salon_id == 2:
                available_masters = salon2_masters
            else:
                print(f"   ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–∞–ª–æ–Ω {salon_id} –¥–ª—è –∑–∞–ø–∏—Å–∏ {booking_id}")
                skipped_count += 1
                continue
            
            if not available_masters:
                print(f"   ‚ö†Ô∏è –ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ {salon_id} –¥–ª—è –∑–∞–ø–∏—Å–∏ {booking_id} - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                skipped_count += 1
                continue
            
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
            selected_master = random.choice(available_masters)
            master_id, user_id, master_name = selected_master
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
            if notes:
                new_notes = f"{notes}\n\n–£—Å–ª—É–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–ª: –õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä ({master_name})"
            else:
                new_notes = f"–£—Å–ª—É–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–ª: –õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä ({master_name})"
            
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                print(f"   üîç –û—Ç–ª–∞–¥–∫–∞: master_id={master_id}, notes='{new_notes[:50]}...', booking_id={booking_id}")
                
                cursor.execute("""
                    UPDATE bookings 
                    SET master_id = ?, notes = ?
                    WHERE id = ?
                """, (master_id, new_notes, booking_id))
                
                print(f"   ‚úÖ –ó–∞–ø–∏—Å—å {booking_id}: –Ω–∞–∑–Ω–∞—á–µ–Ω –º–∞—Å—Ç–µ—Ä {master_name} (ID: {master_id})")
                updated_count += 1
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ {booking_id}: {e}")
                print(f"   üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: master_id={master_id}, notes_length={len(new_notes)}, booking_id={booking_id}")
                skipped_count += 1
                continue
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\n4Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
        print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {skipped_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞
        cursor.execute("""
            SELECT COUNT(*) FROM bookings 
            WHERE salon_id IS NOT NULL AND master_id IS NULL
        """)
        remaining_count = cursor.fetchone()[0]
        print(f"   –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –º–∞—Å—Ç–µ—Ä–∞: {remaining_count}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
    finally:
        conn.close()

def show_updated_bookings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏"""
    
    db_path = Path(__file__).parent / "bookme.db"
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:")
        
        cursor.execute("""
            SELECT b.id, b.salon_id, b.service_id, b.master_id, b.start_time, b.status, b.notes
            FROM bookings b
            WHERE b.salon_id IS NOT NULL AND b.master_id IS NOT NULL
            ORDER BY b.start_time DESC
            LIMIT 5
        """)
        
        bookings = cursor.fetchall()
        
        for booking in bookings:
            booking_id, salon_id, service_id, master_id, start_time, status, notes = booking
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–∞—Å—Ç–µ—Ä–∞
            cursor.execute("""
                SELECT u.full_name FROM masters m 
                JOIN users u ON m.user_id = u.id 
                WHERE m.id = ?
            """, (master_id,))
            master_name_result = cursor.fetchone()
            master_name = master_name_result[0] if master_name_result else f"–ú–∞—Å—Ç–µ—Ä {master_id}"
            
            print(f"\n   üìÖ –ó–∞–ø–∏—Å—å {booking_id}:")
            print(f"      –°–∞–ª–æ–Ω: {salon_id}")
            print(f"      –£—Å–ª—É–≥–∞: {service_id}")
            print(f"      –ú–∞—Å—Ç–µ—Ä: {master_name} (ID: {master_id})")
            print(f"      –í—Ä–µ–º—è: {start_time}")
            print(f"      –°—Ç–∞—Ç—É—Å: {status}")
            if notes:
                print(f"      –ó–∞–º–µ—Ç–∫–∏: {notes[:100]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∑–∞–ø–∏—Å–µ–π: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π —Å–∞–ª–æ–Ω–∞")
    print("="*60)
    
    update_salon_bookings()
    show_updated_bookings()
    
    print("\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
