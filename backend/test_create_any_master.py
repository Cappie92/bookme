#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Å "–õ—é–±—ã–º –º–∞—Å—Ç–µ—Ä–æ–º"
"""

import requests
import json
from datetime import datetime, timedelta

BASE_URL = "http://localhost:8000"

def test_create_booking_with_any_master():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å "–õ—é–±—ã–º –º–∞—Å—Ç–µ—Ä–æ–º" """
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º 27 —è–Ω–≤–∞—Ä—è (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫) - —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
    test_date = datetime(2025, 1, 27)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∞
    data = {
        'salon_id': 1,
        'service_id': 1,
        'start_time': test_date.replace(hour=10, minute=0, second=0, microsecond=0).isoformat(),
        'end_time': test_date.replace(hour=11, minute=0, second=0, microsecond=0).isoformat(),
        'notes': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å –ª—é–±—ã–º –º–∞—Å—Ç–µ—Ä–æ–º',
        'client_phone': '+79999999999'
    }
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å '–õ—é–±—ã–º –º–∞—Å—Ç–µ—Ä–æ–º':")
    print(json.dumps(data, indent=2, default=str))
    
    try:
        response = requests.post(f"{BASE_URL}/bookings/create-with-any-master", params=data)
        
        print(f"\n–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            print(json.dumps(result, indent=2, default=str))
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_available_slots_any_master():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –¥–ª—è "–õ—é–±–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞" """
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º 27 —è–Ω–≤–∞—Ä—è (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫) - —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
    test_date = datetime(2025, 1, 27)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∞
    params = {
        'salon_id': 1,
        'service_id': 1,
        'year': test_date.year,
        'month': test_date.month,
        'day': test_date.day,
        'service_duration': 60
    }
    
    print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ –¥–ª—è '–õ—é–±–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞':")
    print(json.dumps(params, indent=2, default=str))
    
    try:
        response = requests.get(f"{BASE_URL}/bookings/available-slots-any-master", params=params)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–ª–æ—Ç–æ–≤: {len(data)}")
            if data:
                print("–ü—Ä–∏–º–µ—Ä —Å–ª–æ—Ç–∞:")
                print(json.dumps(data[0], indent=2, default=str))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Å '–õ—é–±—ã–º –º–∞—Å—Ç–µ—Ä–æ–º'")
    print("="*60)
    
    test_available_slots_any_master()
    test_create_booking_with_any_master()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
