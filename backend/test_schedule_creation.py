#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏ –∑–∞–ø–∏—Å–µ–π
"""
import requests
import json
from datetime import datetime, timedelta, date, time
from typing import Dict, Any

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000"

def create_user(phone: str, password: str, full_name: str, role: str = "client") -> Dict[str, Any]:
    """–°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    response = requests.post(f"{BASE_URL}/api/auth/register", json={
        "phone": phone,
        "password": password,
        "full_name": full_name,
        "email": f"{phone.replace('+', '')}@test.com",
        "role": role
    })
    if response.status_code == 200:
        return response.json()
    else:
        print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {phone} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: {response.status_code} - {response.text}")
        return None

def get_auth_token(phone: str, password: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    response = requests.post(f"{BASE_URL}/api/auth/login", json={
        "phone": phone,
        "password": password
    })
    if response.status_code == 200:
        return response.json()["access_token"]
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code} - {response.text}")

def create_master_schedule(token: str, schedule_data: Dict[str, Any]) -> Dict[str, Any]:
    """–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.post(f"{BASE_URL}/api/master/schedule/rules", 
                           json=schedule_data, 
                           headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {response.text}")

def create_booking(token: str, booking_data: Dict[str, Any]) -> Dict[str, Any]:
    """–°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.post(f"{BASE_URL}/api/bookings/", 
                           json=booking_data, 
                           headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {response.text}")

def get_master_id(token: str) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å ID –º–∞—Å—Ç–µ—Ä–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/api/master/settings", headers=headers)
    if response.status_code == 200:
        return response.json()["master"]["id"]
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –º–∞—Å—Ç–µ—Ä–∞: {response.text}")

def get_salon_id(token: str) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å ID —Å–∞–ª–æ–Ω–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/api/master/salons", headers=headers)
    if response.status_code == 200:
        salons = response.json()
        if salons:
            return salons[0]["id"]
    raise Exception("–°–∞–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

def get_service_id(token: str, salon_id: int) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å ID —É—Å–ª—É–≥–∏ —Å–∞–ª–æ–Ω–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/api/salon/services/public?salon_id={salon_id}")
    if response.status_code == 200:
        services = response.json()
        if services:
            return services[0]["id"]
    raise Exception("–£—Å–ª—É–≥–∞ —Å–∞–ª–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def get_master_service_id(token: str) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å ID –ª–∏—á–Ω–æ–π —É—Å–ª—É–≥–∏ –º–∞—Å—Ç–µ—Ä–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{BASE_URL}/api/master/services", headers=headers)
    if response.status_code == 200:
        services = response.json()
        if services:
            return services[0]["id"]
    raise Exception("–õ–∏—á–Ω–∞—è —É—Å–ª—É–≥–∞ –º–∞—Å—Ç–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def main():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    master_phone = "+79435774916"  # –ú–∞—Å—Ç–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    master_password = "test123"
    client_phone = "+79735906386"
    client_password = "test123"
    salon_phone = "+79000000000"
    salon_password = "test123"
    
    try:
        # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        create_user(master_phone, master_password, "–¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Å—Ç–µ—Ä", "master")
        create_user(client_phone, client_password, "–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç", "client")
        create_user(salon_phone, salon_password, "–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–ª–æ–Ω–∞", "admin")
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä–∞
        print("2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä–∞...")
        master_token = get_auth_token(master_phone, master_password)
        print("‚úÖ –ú–∞—Å—Ç–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        
        # 3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
        print("3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞...")
        client_token = get_auth_token(client_phone, client_password)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        
        # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ ID –º–∞—Å—Ç–µ—Ä–∞
        master_id = get_master_id(master_token)
        print(f"‚úÖ ID –º–∞—Å—Ç–µ—Ä–∞: {master_id}")
        
        # 5. –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞
        print("4. –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞...")
        personal_schedule = {
            "type": "weekdays",
            "validUntil": "2025-10-15",
            "weekdays": {
                "1": {"start": "09:00", "end": "18:00"},  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
                "2": {"start": "09:00", "end": "18:00"},  # –í—Ç–æ—Ä–Ω–∏–∫
                "3": {"start": "09:00", "end": "18:00"},  # –°—Ä–µ–¥–∞
                "4": {"start": "09:00", "end": "18:00"},  # –ß–µ—Ç–≤–µ—Ä–≥
                "5": {"start": "09:00", "end": "18:00"},  # –ü—è—Ç–Ω–∏—Ü–∞
            }
        }
        
        personal_result = create_master_schedule(master_token, personal_schedule)
        print(f"‚úÖ –õ–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {personal_result['slots_created']} —Å–ª–æ—Ç–æ–≤")
        
        # 6. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –≤ —Å–∞–ª–æ–Ω–µ
        print("5. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞ –≤ —Å–∞–ª–æ–Ω–µ...")
        salon_id = get_salon_id(master_token)
        print(f"‚úÖ ID —Å–∞–ª–æ–Ω–∞: {salon_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–∞–ª–æ–Ω–∞ —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏
        salon_schedule = {
            "type": "weekdays",
            "validUntil": "2025-10-15",
            "weekdays": {
                "1": {"start": "10:00", "end": "19:00"},  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º
                "2": {"start": "10:00", "end": "19:00"},  # –í—Ç–æ—Ä–Ω–∏–∫ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º
                "3": {"start": "10:00", "end": "19:00"},  # –°—Ä–µ–¥–∞ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º
                "4": {"start": "10:00", "end": "19:00"},  # –ß–µ—Ç–≤–µ—Ä–≥ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º
                "5": {"start": "10:00", "end": "19:00"},  # –ü—è—Ç–Ω–∏—Ü–∞ - –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º
            }
        }
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–∞–ª–æ–Ω–∞ —á–µ—Ä–µ–∑ bulk-create
        headers = {"Authorization": f"Bearer {master_token}"}
        response = requests.post(f"{BASE_URL}/api/master/schedule/bulk-create?start_date=2025-09-22&end_date=2025-10-15&salon_id={salon_id}", 
                               headers=headers)
        if response.status_code == 200:
            salon_result = response.json()
            print(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —Å–∞–ª–æ–Ω–µ —Å–æ–∑–¥–∞–Ω–æ: {salon_result['created_records']} –∑–∞–ø–∏—Å–µ–π")
        else:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —Å–∞–ª–æ–Ω–µ: {response.text}")
        
        # 7. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–∞
        print("6. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–∞...")
        
        # –ü–æ–ª—É—á–∞–µ–º ID —É—Å–ª—É–≥
        master_service_id = get_master_service_id(master_token)
        salon_service_id = get_service_id(master_token, salon_id)
        
        print(f"‚úÖ ID –ª–∏—á–Ω–æ–π —É—Å–ª—É–≥–∏ –º–∞—Å—Ç–µ—Ä–∞: {master_service_id}")
        print(f"‚úÖ ID —É—Å–ª—É–≥–∏ —Å–∞–ª–æ–Ω–∞: {salon_service_id}")
        
        # –ó–∞–ø–∏—Å—å –Ω–∞ –ª–∏—á–Ω—É—é —É—Å–ª—É–≥—É –º–∞—Å—Ç–µ—Ä–∞ (23 —Å–µ–Ω—Ç—è–±—Ä—è, 10:00-11:00)
        personal_booking = {
            "service_id": master_service_id,
            "indie_master_id": master_id,
            "start_time": "2025-09-23T10:00:00",
            "end_time": "2025-09-23T11:00:00",
            "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ª–∏—á–Ω—É—é —É—Å–ª—É–≥—É"
        }
        
        personal_booking_result = create_booking(client_token, personal_booking)
        print(f"‚úÖ –õ–∏—á–Ω–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ID {personal_booking_result['id']}")
        
        # –ó–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É –≤ —Å–∞–ª–æ–Ω–µ (24 —Å–µ–Ω—Ç—è–±—Ä—è, 14:00-15:00)
        salon_booking = {
            "service_id": salon_service_id,
            "master_id": master_id,
            "salon_id": salon_id,
            "start_time": "2025-09-24T14:00:00",
            "end_time": "2025-09-24T15:00:00",
            "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ —Å–∞–ª–æ–Ω–µ"
        }
        
        salon_booking_result = create_booking(client_token, salon_booking)
        print(f"‚úÖ –ó–∞–ø–∏—Å—å –≤ —Å–∞–ª–æ–Ω–µ —Å–æ–∑–¥–∞–Ω–∞: ID {salon_booking_result['id']}")
        
        # 8. –û—Ç—á–µ—Ç –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("\nüìã –û–¢–ß–ï–¢ –û –°–û–ó–î–ê–ù–ù–´–• –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:")
        print("=" * 50)
        print(f"1. –õ–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ +{master_phone}:")
        print(f"   - –ü–µ—Ä–∏–æ–¥: 22 —Å–µ–Ω—Ç—è–±—Ä—è - 15 –æ–∫—Ç—è–±—Ä—è 2025")
        print(f"   - –î–Ω–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞")
        print(f"   - –í—Ä–µ–º—è: 09:00-18:00")
        print(f"   - –°–æ–∑–¥–∞–Ω–æ —Å–ª–æ—Ç–æ–≤: {personal_result['slots_created']}")
        
        print(f"\n2. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –≤ —Å–∞–ª–æ–Ω–µ +{salon_phone}:")
        print(f"   - –ü–µ—Ä–∏–æ–¥: 22 —Å–µ–Ω—Ç—è–±—Ä—è - 15 –æ–∫—Ç—è–±—Ä—è 2025")
        print(f"   - –î–Ω–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞")
        print(f"   - –í—Ä–µ–º—è: 10:00-19:00 (–∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ª–∏—á–Ω—ã–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º)")
        print(f"   - –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {salon_result.get('created_records', 'N/A')}")
        
        print(f"\n3. –ó–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞ +{client_phone}:")
        print(f"   - –õ–∏—á–Ω–∞—è —É—Å–ª—É–≥–∞ –º–∞—Å—Ç–µ—Ä–∞: 23 —Å–µ–Ω—Ç—è–±—Ä—è 2025, 10:00-11:00")
        print(f"   - –£—Å–ª—É–≥–∞ –≤ —Å–∞–ª–æ–Ω–µ: 24 —Å–µ–Ω—Ç—è–±—Ä—è 2025, 14:00-15:00")
        
        print(f"\n4. –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:")
        print(f"   - –õ–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 09:00-18:00")
        print(f"   - –°–∞–ª–æ–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 10:00-19:00")
        print(f"   - –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ: 10:00-18:00 (8 —á–∞—Å–æ–≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤ –¥–µ–Ω—å)")
        
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
