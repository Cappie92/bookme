#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Å–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ–º —Å –Ω–æ–≤–æ–π —Å—Ö–µ–º–æ–π –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏.
"""

import sys
import os
from sqlalchemy.orm import Session

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import get_db
from models import AvailabilitySlot

def clear_availability_slots():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"""
    
    print("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Å–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...")
    
    db = next(get_db())
    
    try:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        total_slots = db.query(AvailabilitySlot).count()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–ª–æ—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {total_slots}")
        
        if total_slots > 0:
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–ª–æ—Ç—ã
            db.query(AvailabilitySlot).delete()
            db.commit()
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {total_slots} —Å–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
        else:
            print("‚ÑπÔ∏è  –°–ª–æ—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —É–¥–∞–ª–µ–Ω–æ
        remaining_slots = db.query(AvailabilitySlot).count()
        print(f"üìä –û—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–ª–æ—Ç–æ–≤: {remaining_slots}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        db.rollback()
        raise
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...")
    
    try:
        clear_availability_slots()
        print("\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
