#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
"""

from sqlalchemy.orm import Session
from database import SessionLocal, engine
from models import Base, User, UserRole, Master, IndieMaster, Salon, SalonBranch, Service, ServiceCategory, MasterServiceCategory, MasterService, SalonMasterServiceSettings, Booking, BookingStatus
from auth import get_password_hash
import random
from datetime import datetime, timedelta

def reset_test_system():
    db = SessionLocal()
    
    try:
        print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("   –£–¥–∞–ª—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
        db.query(Booking).delete()
        
        print("   –£–¥–∞–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤...")
        db.query(SalonMasterServiceSettings).delete()
        
        print("   –£–¥–∞–ª—è–µ–º —É—Å–ª—É–≥–∏...")
        db.query(Service).delete()
        
        print("   –£–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥...")
        db.query(ServiceCategory).delete()
        
        print("   –£–¥–∞–ª—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤...")
        db.query(Master).delete()
        db.query(IndieMaster).delete()
        
        print("   –£–¥–∞–ª—è–µ–º —Ñ–∏–ª–∏–∞–ª—ã...")
        db.query(SalonBranch).delete()
        
        print("   –£–¥–∞–ª—è–µ–º —Å–∞–ª–æ–Ω—ã...")
        db.query(Salon).delete()
        
        print("   –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤
        test_users = db.query(User).filter(
            User.email.like('%@test.com'),
            User.role != UserRole.ADMIN
        ).all()
        
        for user in test_users:
            db.delete(user)
        
        # –£–¥–∞–ª—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–∞–ª–æ–Ω–æ–≤
        salon_owners = db.query(User).filter(
            User.email.like('salon%@test.com')
        ).all()
        
        for owner in salon_owners:
            db.delete(owner)
        
        db.commit()
        print("‚úÖ –°—Ç–∞—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—á–∏—â–µ–Ω–∞")
        
        print("\nüå± –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        
        # 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤
        print("üë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤...")
        salon_users = []
        for i in range(2):
            user = User(
                email=f"salon{i+1}@test.com",
                hashed_password=get_password_hash("test123"),
                phone=f"+7{9000000000 + i}",
                full_name=f"–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–ª–æ–Ω–∞ ‚Ññ{i+1}",
                role=UserRole.ADMIN,
                is_active=True,
                is_verified=True,
                is_phone_verified=True
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            salon_users.append(user)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–∞–ª–æ–Ω–∞: {user.full_name}")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Å–∞–ª–æ–Ω—ã
        print("üè¢ –°–æ–∑–¥–∞–µ–º —Å–∞–ª–æ–Ω—ã...")
        salons = []
        for i, user in enumerate(salon_users):
            salon = Salon(
                user_id=user.id,
                name=f"–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã ‚Ññ{i+1}",
                description=f"–û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã ‚Ññ{i+1}",
                city=f"–ú–æ—Å–∫–≤–∞",
                phone=f"+7{9000000000 + i}",
                email=f"salon{i+1}@test.com",
                website=f"salon{i+1}.test.com",
                payment_on_visit=True,
                payment_advance=False
            )
            db.add(salon)
            db.commit()
            db.refresh(salon)
            salons.append(salon)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Å–∞–ª–æ–Ω: {salon.name}")
        
        # 3. –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª–∏–∞–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∞–ª–æ–Ω–∞
        print("üè™ –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª–∏–∞–ª—ã...")
        branches = []
        for salon in salons:
            for j in range(2):
                branch = SalonBranch(
                    salon_id=salon.id,
                    name=f"–§–∏–ª–∏–∞–ª {j+1}",
                    address=f"—É–ª. –§–∏–ª–∏–∞–ª—å–Ω–∞—è {j+1}, –¥. {j+1}",
                    phone=f"+7{random.randint(9000000000, 9999999999)}",
                    working_hours="09:00-21:00",
                    is_active=True
                )
                db.add(branch)
                db.commit()
                db.refresh(branch)
                branches.append(branch)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∏–ª–∏–∞–ª: {branch.name} –¥–ª—è —Å–∞–ª–æ–Ω–∞ {salon.name}")
        
        # 4. –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã —É—Å–ª—É–≥
        print("üìã –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã —É—Å–ª—É–≥...")
        service_categories = [
            "–°—Ç—Ä–∏–∂–∫–∞ –∏ —É–∫–ª–∞–¥–∫–∞",
            "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ",
            "–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä",
            "–ú–∞—Å—Å–∞–∂",
            "–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è",
            "–ú–∞–∫–∏—è–∂",
            "–≠–ø–∏–ª—è—Ü–∏—è",
            "SPA-–ø—Ä–æ—Ü–µ–¥—É—Ä—ã"
        ]
        
        created_categories = []
        for category_name in service_categories:
            category = ServiceCategory(name=category_name)
            db.add(category)
            db.commit()
            db.refresh(category)
            created_categories.append(category)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø —É—Å–ª—É–≥–∏: {category.name}")
        
        # 5. –°–æ–∑–¥–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤
        print("üë®‚Äçüíº –°–æ–∑–¥–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤...")
        masters = []
        indie_masters = []
        
        # 3 –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∞
        for i in range(3):
            user = User(
                email=f"indie_master{i+1}@test.com",
                hashed_password=get_password_hash("test123"),
                phone=f"+7{random.randint(9000000000, 9999999999)}",
                full_name=f"–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä {i+1}",
                role=UserRole.MASTER,
                is_active=True,
                is_verified=True,
                is_phone_verified=True
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            
            indie_master = IndieMaster(
                user_id=user.id,
                bio=f"–û–ø—ã—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Å {random.randint(3, 15)} –ª–µ—Ç —Å—Ç–∞–∂–∞",
                experience_years=random.randint(3, 15),
                domain=f"indie-master{i+1}.test.com",
                address=f"—É–ª. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è {i+1}, –¥. {i+1}",
                payment_on_visit=True,
                payment_advance=random.choice([True, False])
            )
            db.add(indie_master)
            db.commit()
            db.refresh(indie_master)
            indie_masters.append(indie_master)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {user.full_name}")
        
        # 4 —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ —Å–∞–ª–æ–Ω–∞—Ö
        for i in range(4):
            user = User(
                email=f"salon_master{i+1}@test.com",
                hashed_password=get_password_hash("test123"),
                phone=f"+7{random.randint(9000000000, 9999999999)}",
                full_name=f"–°–∞–ª–æ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä {i+1}",
                role=UserRole.MASTER,
                is_active=True,
                is_verified=True,
                is_phone_verified=True
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            
            master = Master(
                user_id=user.id,
                bio=f"–ú–∞—Å—Ç–µ—Ä —Å–∞–ª–æ–Ω–∞ —Å {random.randint(2, 10)} –ª–µ—Ç –æ–ø—ã—Ç–∞",
                experience_years=random.randint(2, 10),
                can_work_independently=False,
                can_work_in_salon=True
            )
            db.add(master)
            db.commit()
            db.refresh(master)
            masters.append(master)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Å–∞–ª–æ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {user.full_name}")
        
        # 3 —Ä–∞–±–æ—Ç–∞—é—Ç –∏ –Ω–∞ —Å–µ–±—è –∏ –≤ —Å–∞–ª–æ–Ω–µ
        for i in range(3):
            user = User(
                email=f"hybrid_master{i+1}@test.com",
                hashed_password=get_password_hash("test123"),
                phone=f"+7{random.randint(9000000000, 9999999999)}",
                full_name=f"–ì–∏–±—Ä–∏–¥–Ω—ã–π –º–∞—Å—Ç–µ—Ä {i+1}",
                role=UserRole.MASTER,
                is_active=True,
                is_verified=True,
                is_phone_verified=True
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            
            master = Master(
                user_id=user.id,
                bio=f"–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Å {random.randint(5, 20)} –ª–µ—Ç —Å—Ç–∞–∂–∞",
                experience_years=random.randint(5, 20),
                can_work_independently=True,
                can_work_in_salon=True
            )
            db.add(master)
            db.commit()
            db.refresh(master)
            masters.append(master)
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ –∫–∞–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∞
            indie_master = IndieMaster(
                user_id=user.id,
                bio=f"–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä —Å {random.randint(5, 20)} –ª–µ—Ç —Å—Ç–∞–∂–∞",
                experience_years=random.randint(5, 20),
                domain=f"hybrid-master{i+1}.test.com",
                address=f"—É–ª. –ì–∏–±—Ä–∏–¥–Ω–∞—è {i+1}, –¥. {i+1}",
                payment_on_visit=True,
                payment_advance=random.choice([True, False])
            )
            db.add(indie_master)
            db.commit()
            db.refresh(indie_master)
            indie_masters.append(indie_master)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –≥–∏–±—Ä–∏–¥–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {user.full_name}")
        
        # 6. –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤
        print("üíá‚Äç‚ôÄÔ∏è –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤...")
        salon_services = []
        for salon in salons:
            for category in random.sample(created_categories, 5):  # 5 —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                service = Service(
                    name=f"{category.name} - {salon.name}",
                    description=f"–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ {category.name} –≤ {salon.name}",
                    price=random.randint(500, 5000),
                    duration=random.randint(30, 180),
                    salon_id=salon.id,
                    category_id=category.id
                )
                db.add(service)
                db.commit()
                db.refresh(service)
                salon_services.append(service)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —É—Å–ª—É–≥–∞: {service.name} - {service.price}‚ÇΩ")
        
        # 7. –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        print("üë®‚Äçüé® –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤...")
        indie_services = []
        for indie_master in indie_masters:
            for category in random.sample(created_categories, 3):  # 3 —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                service = Service(
                    name=f"{category.name} - {indie_master.user.full_name}",
                    description=f"–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ {category.name} –æ—Ç {indie_master.user.full_name}",
                    price=random.randint(800, 6000),
                    duration=random.randint(45, 240),
                    salon_id=None,
                    category_id=category.id
                )
                db.add(service)
                db.commit()
                db.refresh(service)
                indie_services.append(service)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —É—Å–ª—É–≥–∞: {service.name} - {service.price}‚ÇΩ")
        
        # 8. –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—Å–ª—É–≥–∞–º–∏ –≤ —Å–∞–ª–æ–Ω–∞—Ö
        print("üîó –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—Å–ª—É–≥–∞–º–∏ –≤ —Å–∞–ª–æ–Ω–∞—Ö...")
        for master in masters:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ —Å–∞–ª–æ–Ω–∞–º
            salon = random.choice(salons)
            for service in random.sample(salon_services, 3):  # 3 —Å–ª—É—á–∞–π–Ω—ã–µ —É—Å–ª—É–≥–∏
                if service.salon_id == salon.id:
                    settings = SalonMasterServiceSettings(
                        master_id=master.id,
                        salon_id=salon.id,
                        service_id=service.id,
                        is_active=True,
                        master_payment_type="percent",
                        master_payment_value=random.randint(30, 70)
                    )
                    db.add(settings)
                    print(f"   ‚úÖ –ú–∞—Å—Ç–µ—Ä {master.user.full_name} —Å–≤—è–∑–∞–Ω —Å —É—Å–ª—É–≥–æ–π {service.name} –≤ {salon.name}")
        
        db.commit()
        
        # 9. –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
        print("üë• –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤...")
        clients = []
        for i in range(20):
            user = User(
                email=f"client{i+1}@test.com",
                hashed_password=get_password_hash("test123"),
                phone=f"+7{random.randint(9000000000, 9999999999)}",
                full_name=f"–ö–ª–∏–µ–Ω—Ç {i+1}",
                role=UserRole.CLIENT,
                is_active=True,
                is_verified=True,
                is_phone_verified=True
            )
            db.add(user)
            db.commit()
            db.refresh(user)
            clients.append(user)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç: {user.full_name}")
        
        # 10. –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 2 –Ω–µ–¥–µ–ª–∏
        print("üìÖ –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
        start_date = datetime.now() + timedelta(days=1)
        
        for client in clients:
            # 2-4 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
            num_bookings = random.randint(2, 4)
            for _ in range(num_bookings):
                # –°–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 2 –Ω–µ–¥–µ–ª–∏
                random_days = random.randint(1, 14)
                random_hours = random.randint(9, 18)
                random_minutes = random.choice([0, 15, 30, 45])
                
                booking_date = start_date + timedelta(days=random_days)
                start_time = booking_date.replace(hour=random_hours, minute=random_minutes)
                
                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —É—Å–ª—É–≥—É (—Å–∞–ª–æ–Ω–Ω—É—é –∏–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é)
                if random.choice([True, False]) and salon_services:
                    # –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å–∞–ª–æ–Ω
                    service = random.choice(salon_services)
                    end_time = start_time + timedelta(minutes=service.duration)
                    
                    booking = Booking(
                        client_id=client.id,
                        service_id=service.id,
                        salon_id=service.salon_id,
                        start_time=start_time,
                        end_time=end_time,
                        status=random.choice([BookingStatus.PENDING, BookingStatus.CONFIRMED]),
                        payment_amount=service.price
                    )
                else:
                    # –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º—É –º–∞—Å—Ç–µ—Ä—É
                    if indie_services:
                        service = random.choice(indie_services)
                        end_time = start_time + timedelta(minutes=service.duration)
                        
                        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∞ –¥–ª—è —ç—Ç–æ–π —É—Å–ª—É–≥–∏
                        indie_master = None
                        for im in indie_masters:
                            if im.user.full_name in service.name:
                                indie_master = im
                                break
                        
                        if indie_master:
                            booking = Booking(
                                client_id=client.id,
                                service_id=service.id,
                                indie_master_id=indie_master.id,
                                start_time=start_time,
                                end_time=end_time,
                                status=random.choice([BookingStatus.PENDING, BookingStatus.CONFIRMED]),
                                payment_amount=service.price
                            )
                        else:
                            continue
                    else:
                        continue
                
                db.add(booking)
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {client.full_name} -> {service.name} –Ω–∞ {start_time.strftime('%d.%m.%Y %H:%M')}")
        
        db.commit()
        
        print("\nüéâ –ù–æ–≤–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –°–∞–ª–æ–Ω–æ–≤: {len(salons)}")
        print(f"   ‚Ä¢ –§–∏–ª–∏–∞–ª–æ–≤: {len(branches)}")
        print(f"   ‚Ä¢ –ú–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–∞—Ö: {len(masters)}")
        print(f"   ‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤: {len(indie_masters)}")
        print(f"   ‚Ä¢ –ö–ª–∏–µ–Ω—Ç–æ–≤: {len(clients)}")
        print(f"   ‚Ä¢ –£—Å–ª—É–≥ –≤ —Å–∞–ª–æ–Ω–∞—Ö: {len(salon_services)}")
        print(f"   ‚Ä¢ –£—Å–ª—É–≥ —É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–æ–≤: {len(indie_services)}")
        
        print("\n‚úÖ –í—Å–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Ç–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∞—Ç 10 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ +7 (—Ñ–æ—Ä–º–∞—Ç: +7XXXXXXXXXX)")
        
        return {
            'salons': salons,
            'masters': masters,
            'indie_masters': indie_masters,
            'clients': clients
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã: {e}")
        db.rollback()
        raise
    finally:
        db.close()

if __name__ == "__main__":
    reset_test_system()
