#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 10:00 –¥–æ 20:00 —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –ø—è—Ç–Ω–∏—Ü—É.
"""

import sys
import os
from datetime import time
from sqlalchemy.orm import Session

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import get_db, engine
from models import User, Salon, Master, IndieMaster, AvailabilitySlot, OwnerType
from auth import get_password_hash

def setup_working_hours():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = next(get_db())
    
    try:
        # –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: —Å 10:00 –¥–æ 20:00
        work_start = time(10, 0)  # 10:00
        work_end = time(20, 0)    # 20:00
        
        # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏: –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (1) - –ø—è—Ç–Ω–∏—Ü–∞ (5)
        work_days = [1, 2, 3, 4, 5]  # –ü–Ω, –í—Ç, –°—Ä, –ß—Ç, –ü—Ç (1=–ü–Ω, 2=–í—Ç, 3=–°—Ä, 4=–ß—Ç, 5=–ü—Ç)
        
        print(f"üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: {work_start.strftime('%H:%M')} - {work_end.strftime('%H:%M')}")
        print(f"üìÖ –†–∞–±–æ—á–∏–µ –¥–Ω–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞")
        
        # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤
        print("\nüè¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∞–ª–æ–Ω–æ–≤...")
        salons = db.query(Salon).all()
        
        for salon in salons:
            print(f"  - –°–∞–ª–æ–Ω: {salon.name} (ID: {salon.id})")
            
            # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ—Ç—ã
            db.query(AvailabilitySlot).filter(
                AvailabilitySlot.owner_type == OwnerType.SALON,
                AvailabilitySlot.owner_id == salon.id
            ).delete()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
            for day in work_days:
                slot = AvailabilitySlot(
                    owner_type=OwnerType.SALON,
                    owner_id=salon.id,
                    day_of_week=day,
                    start_time=work_start,
                    end_time=work_end
                )
                db.add(slot)
                print(f"    ‚úÖ –î–µ–Ω—å {day}: {work_start.strftime('%H:%M')} - {work_end.strftime('%H:%M')}")
        
        # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–∞—Ö (–∏—Å–∫–ª—é—á–∞—è –≥–∏–±—Ä–∏–¥–Ω—ã—Ö)
        print("\nüë®‚Äçüíº –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–∞—Ö...")
        # –ò—Å–∫–ª—é—á–∞–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ (ID 5, 6, 7) –∏–∑ –æ–±—ã—á–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        regular_masters = db.query(Master).filter(~Master.id.in_([5, 6, 7])).all()
        
        for master in regular_masters:
            print(f"  - –ú–∞—Å—Ç–µ—Ä: {master.user.full_name if master.user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (ID: {master.id})")
            
            # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ—Ç—ã
            db.query(AvailabilitySlot).filter(
                AvailabilitySlot.owner_type == OwnerType.MASTER,
                AvailabilitySlot.owner_id == master.id
            ).delete()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
            for day in work_days:
                slot = AvailabilitySlot(
                    owner_type=OwnerType.MASTER,
                    owner_id=master.id,
                    day_of_week=day,
                    start_time=work_start,
                    end_time=work_end
                )
                db.add(slot)
                print(f"    ‚úÖ –î–µ–Ω—å {day}: {work_start.strftime('%H:%M')} - {work_end.strftime('%H:%M')}")
        

        
        # 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–ª—è –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –∫–∞–∫ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ)
        print("\nüîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤...")
        hybrid_master_ids = [5, 6, 7]  # ID –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        
        for master_id in hybrid_master_ids:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Å—Ç–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            master = db.query(Master).filter(Master.id == master_id).first()
            if master:
                print(f"  - –ì–∏–±—Ä–∏–¥–Ω—ã–π –º–∞—Å—Ç–µ—Ä: {master.user.full_name if master.user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (ID: {master.id})")
                
                # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞
                db.query(AvailabilitySlot).filter(
                    AvailabilitySlot.owner_type == OwnerType.MASTER,
                    AvailabilitySlot.owner_id == master_id
                ).delete()
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
                for day in work_days:
                    slot = AvailabilitySlot(
                        owner_type=OwnerType.MASTER,
                        owner_id=master_id,
                        day_of_week=day,
                        start_time=work_start,
                        end_time=work_end
                    )
                    db.add(slot)
                    print(f"    ‚úÖ –î–µ–Ω—å {day}: {work_start.strftime('%H:%M')} - {work_end.strftime('%H:%M')}")
        
        # 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ (–∏—Å–∫–ª—é—á–∞—è –≥–∏–±—Ä–∏–¥–Ω—ã—Ö)
        print("\nüÜì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤...")
        # –ò—Å–∫–ª—é—á–∞–µ–º –≥–∏–±—Ä–∏–¥–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤ (ID 5, 6, 7) –∏–∑ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        regular_indie_masters = db.query(IndieMaster).filter(~IndieMaster.id.in_([5, 6, 7])).all()
        
        for indie_master in regular_indie_masters:
            print(f"  - –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –º–∞—Å—Ç–µ—Ä: {indie_master.user.full_name if indie_master.user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (ID: {indie_master.id})")
            
            # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ—Ç—ã
            db.query(AvailabilitySlot).filter(
                AvailabilitySlot.owner_type == OwnerType.MASTER,
                AvailabilitySlot.owner_id == indie_master.id
            ).delete()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
            for day in work_days:
                slot = AvailabilitySlot(
                    owner_type=OwnerType.MASTER,
                    owner_id=indie_master.id,
                    day_of_week=day,
                    start_time=work_start,
                    end_time=work_end
                )
                db.add(slot)
                print(f"    ‚úÖ –î–µ–Ω—å {day}: {work_start.strftime('%H:%M')} - {work_end.strftime('%H:%M')}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        print(f"\n‚úÖ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - –°–∞–ª–æ–Ω—ã: {len(salons)}")
        print(f"   - –ú–∞—Å—Ç–µ—Ä–∞ –≤ —Å–∞–ª–æ–Ω–∞—Ö: {len(regular_masters)}")
        print(f"   - –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –º–∞—Å—Ç–µ—Ä–∞: {len(regular_indie_masters)}")
        print(f"   - –ì–∏–±—Ä–∏–¥–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞: {len(hybrid_master_ids)}")
        print(f"   - –í—Å–µ–≥–æ —Å–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {(len(salons) + len(regular_masters) + len(regular_indie_masters) + len(hybrid_master_ids)) * len(work_days)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
        total_slots = db.query(AvailabilitySlot).count()
        print(f"   - –í—Å–µ–≥–æ —Å–ª–æ—Ç–æ–≤ –≤ –±–∞–∑–µ: {total_slots}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        db.rollback()
        raise
    finally:
        db.close()

def verify_working_hours():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...")
    
    db = next(get_db())
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤
        salon_slots = db.query(AvailabilitySlot).filter(
            AvailabilitySlot.owner_type == OwnerType.SALON
        ).all()
        
        print(f"üè¢ –°–ª–æ—Ç—ã —Å–∞–ª–æ–Ω–æ–≤: {len(salon_slots)}")
        for slot in salon_slots[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"  - –°–∞–ª–æ–Ω {slot.owner_id}, –¥–µ–Ω—å {slot.day_of_week}: {slot.start_time} - {slot.end_time}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤
        master_slots = db.query(AvailabilitySlot).filter(
            AvailabilitySlot.owner_type == OwnerType.MASTER
        ).all()
        
        print(f"üë®‚Äçüíº –°–ª–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤: {len(master_slots)}")
        for slot in master_slots[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"  - –ú–∞—Å—Ç–µ—Ä {slot.owner_id}, –¥–µ–Ω—å {slot.day_of_week}: {slot.start_time} - {slot.end_time}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        total_slots = db.query(AvailabilitySlot).count()
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤: {total_slots}")
        
        if total_slots > 0:
            print("‚úÖ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        else:
            print("‚ùå –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...")
    
    try:
        setup_working_hours()
        verify_working_hours()
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
