"""add_accounting_tables_income_and_missed_revenue

Revision ID: 63f4fee107cd
Revises: 2e8aadb81db1
Create Date: 2025-08-16 17:44:32.110123

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63f4fee107cd'
down_revision: Union[str, None] = '2e8aadb81db1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Создаем таблицу доходов
    op.create_table('incomes',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('salon_id', sa.Integer(), nullable=True),
        sa.Column('indie_master_id', sa.Integer(), nullable=True),
        sa.Column('branch_id', sa.Integer(), nullable=True),
        sa.Column('booking_id', sa.Integer(), nullable=False),
        sa.Column('total_amount', sa.Float(), nullable=False),
        sa.Column('master_earnings', sa.Float(), nullable=False),
        sa.Column('salon_earnings', sa.Float(), nullable=False),
        sa.Column('income_date', sa.Date(), nullable=False),
        sa.Column('service_date', sa.Date(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
        sa.ForeignKeyConstraint(['branch_id'], ['salon_branches.id'], ),
        sa.ForeignKeyConstraint(['indie_master_id'], ['indie_masters.id'], ),
        sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Создаем индексы для доходов
    op.create_index('idx_income_booking', 'incomes', ['booking_id'], unique=False)
    op.create_index('idx_income_branch', 'incomes', ['branch_id'], unique=False)
    op.create_index('idx_income_date', 'incomes', ['income_date'], unique=False)
    op.create_index('idx_income_indie_master', 'incomes', ['indie_master_id'], unique=False)
    op.create_index('idx_income_salon', 'incomes', ['salon_id'], unique=False)
    op.create_index('idx_income_service_date', 'incomes', ['service_date'], unique=False)
    
    # Создаем таблицу упущенной выгоды
    op.create_table('missed_revenues',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('salon_id', sa.Integer(), nullable=True),
        sa.Column('indie_master_id', sa.Integer(), nullable=True),
        sa.Column('branch_id', sa.Integer(), nullable=True),
        sa.Column('booking_id', sa.Integer(), nullable=False),
        sa.Column('client_id', sa.Integer(), nullable=False),
        sa.Column('missed_amount', sa.Float(), nullable=False),
        sa.Column('service_price', sa.Float(), nullable=False),
        sa.Column('reason', sa.String(), nullable=True),
        sa.Column('missed_date', sa.Date(), nullable=False),
        sa.Column('booking_date', sa.Date(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
        sa.ForeignKeyConstraint(['branch_id'], ['salon_branches.id'], ),
        sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['indie_master_id'], ['indie_masters.id'], ),
        sa.ForeignKeyConstraint(['salon_id'], ['salons.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Создаем индексы для упущенной выгоды
    op.create_index('idx_missed_revenue_booking', 'missed_revenues', ['booking_id'], unique=False)
    op.create_index('idx_missed_revenue_branch', 'missed_revenues', ['branch_id'], unique=False)
    op.create_index('idx_missed_revenue_client', 'missed_revenues', ['client_id'], unique=False)
    op.create_index('idx_missed_revenue_date', 'missed_revenues', ['missed_date'], unique=False)
    op.create_index('idx_missed_revenue_indie_master', 'missed_revenues', ['indie_master_id'], unique=False)
    op.create_index('idx_missed_revenue_salon', 'missed_revenues', ['salon_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Удаляем индексы для упущенной выгоды
    op.drop_index('idx_missed_revenue_salon', table_name='missed_revenues')
    op.drop_index('idx_missed_revenue_indie_master', table_name='missed_revenues')
    op.drop_index('idx_missed_revenue_date', table_name='missed_revenues')
    op.drop_index('idx_missed_revenue_client', table_name='missed_revenues')
    op.drop_index('idx_missed_revenue_branch', table_name='missed_revenues')
    op.drop_index('idx_missed_revenue_booking', table_name='missed_revenues')
    
    # Удаляем таблицу упущенной выгоды
    op.drop_table('missed_revenues')
    
    # Удаляем индексы для доходов
    op.drop_index('idx_income_salon', table_name='incomes')
    op.drop_index('idx_income_indie_master', table_name='incomes')
    op.drop_index('idx_income_service_date', table_name='incomes')
    op.drop_index('idx_income_date', table_name='incomes')
    op.drop_index('idx_income_branch', table_name='incomes')
    op.drop_index('idx_income_booking', table_name='incomes')
    
    # Удаляем таблицу доходов
    op.drop_table('incomes')
    # ### end Alembic commands ###
