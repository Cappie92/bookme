#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:
1. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
2. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è
3. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ CJM –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
4. –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
"""

import requests
import json
from datetime import datetime

def test_phone_verification_scenarios():
    base_url = "http://localhost:8000"
    
    print("=== –¢–ï–°–¢ –°–¶–ï–ù–ê–†–ò–ï–í –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò –¢–ï–õ–ï–§–û–ù–ê ===")
    
    # 1. –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    
    register_data = {
        "email": "test_phone_verification_2024_12_19@example.com",
        "phone": "+79999999994",
        "password": "testpassword123",
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "role": "client"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/register", json=register_data)
        print(f"–°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            if 'user' in result:
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {result['user']['id']}")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {result['user']['is_phone_verified']}")
            print("üìû –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–≤–æ–Ω–æ–∫ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ç–µ—Å—Ç–æ–≤
            access_token = result['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return
    
    # 2. –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è")
    
    forgot_password_data = {
        "phone": "+79999999994"
    }
    
    try:
        response = requests.post(f"{base_url}/auth/forgot-password", json=forgot_password_data)
        print(f"–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result['message']}")
            print("üìû –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–≤–æ–Ω–æ–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 3. –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ CJM –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ CJM –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É")
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    booking_data = {
        "service_id": 1,
        "master_id": 1,
        "salon_id": None,
        "start_time": "2024-01-15T10:00:00Z",
        "end_time": "2024-01-15T11:00:00Z",
        "notes": "–¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
    }
    
    try:
        params = {"client_phone": "+79999999995"}
        response = requests.post(f"{base_url}/bookings/public", json=booking_data, params=params)
        print(f"–°—Ç–∞—Ç—É—Å —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
            print(f"   –ù—É–∂–Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {result.get('needs_phone_verification', False)}")
            print(f"   –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: {result.get('is_new_client', False)}")
            print("üìû –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–≤–æ–Ω–æ–∫ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ CJM")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 4. –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
    print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞")
    
    try:
        headers = {"Authorization": f"Bearer {access_token}"}
        response = requests.delete(f"{base_url}/auth/delete-account", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result['message']}")
            print("üìû –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–≤–æ–Ω–æ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 5. –¢–µ—Å—Ç API –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Plusofon
    print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º API Plusofon")
    
    try:
        response = requests.get(f"{base_url}/auth/plusofon/balance")
        print(f"–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ –±–∞–ª–∞–Ω—Å–∞ Plusofon: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ {result['message']}")
            if result.get('success'):
                print(f"   Account ID: {result.get('account_id')}")
                print(f"   Account Name: {result.get('account_name')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    print("\n=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù ===")
    print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:")
    print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–≤–æ–Ω–∫–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤")
    print("2. –í–≤–µ—Å—Ç–∏ –∫–æ–¥—ã –∏–∑ –∑–≤–æ–Ω–∫–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–æ—Ä–º—ã")
    print("3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

if __name__ == "__main__":
    test_phone_verification_scenarios() 