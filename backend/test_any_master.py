#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ "–õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä"
"""

import requests
import json
from datetime import datetime, timedelta

BASE_URL = "http://localhost:8000"

def test_any_master_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–ª—è "–õ—é–±–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞" """
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    today = datetime.now()
    tomorrow = today + timedelta(days=1)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∞
    params = {
        'salon_id': 1,
        'service_id': 1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É—Å–ª—É–≥–∞ 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        'year': tomorrow.year,
        'month': tomorrow.month,
        'day': tomorrow.day,
        'service_duration': 60
    }
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint '–õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä' —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
    print(json.dumps(params, indent=2, default=str))
    
    try:
        response = requests.get(f"{BASE_URL}/bookings/available-slots-any-master", params=params)
        
        print(f"\n–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–ª–æ—Ç–æ–≤: {len(data)}")
            if data:
                print("–ü—Ä–∏–º–µ—Ä —Å–ª–æ—Ç–∞:")
                print(json.dumps(data[0], indent=2, default=str))
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_services():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ"""
    
    print("\n" + "="*50)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:")
    
    try:
        response = requests.get(f"{BASE_URL}/admin/services")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            services = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: {len(services)}")
            for service in services[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"- ID: {service.get('id')}, –ù–∞–∑–≤–∞–Ω–∏–µ: {service.get('name')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def test_masters():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ"""
    
    print("\n" + "="*50)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ:")
    
    try:
        response = requests.get(f"{BASE_URL}/admin/masters")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            masters = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ –º–∞—Å—Ç–µ—Ä–æ–≤: {len(masters)}")
            for master in masters[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"- ID: {master.get('id')}, –ò–º—è: {master.get('user', {}).get('full_name', 'N/A')}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ '–õ—é–±–æ–π –º–∞—Å—Ç–µ—Ä'")
    print("="*50)
    
    test_services()
    test_masters()
    test_any_master_endpoint()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

