#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —Å–∞–ª–æ–Ω–∞–º–∏ –∏ —É—Å–ª—É–≥–∞–º–∏
"""

import sqlite3
from pathlib import Path

def setup_test_data():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = Path(__file__).parent / "bookme.db"
    
    print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ: {db_path}")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # 1. –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —Å–∞–ª–æ–Ω–æ–º 1
        print("\n1Ô∏è‚É£ –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —Å–∞–ª–æ–Ω–æ–º 1...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞—Å—Ç–µ—Ä–æ–≤
        cursor.execute("SELECT id FROM masters LIMIT 5")
        master_ids = [row[0] for row in cursor.fetchall()]
        
        print(f"   –ù–∞–π–¥–µ–Ω–æ –º–∞—Å—Ç–µ—Ä–æ–≤: {len(master_ids)}")
        
        # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ —Å —Å–∞–ª–æ–Ω–æ–º 1
        for master_id in master_ids:
            cursor.execute("""
                INSERT OR IGNORE INTO salon_masters (salon_id, master_id)
                VALUES (?, ?)
            """, (1, master_id))
            print(f"   –ú–∞—Å—Ç–µ—Ä {master_id} —Å–≤—è–∑–∞–Ω —Å —Å–∞–ª–æ–Ω–æ–º 1")
        
        # 2. –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—Å–ª—É–≥–∞–º–∏
        print("\n2Ô∏è‚É£ –°–≤—è–∑—ã–≤–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —É—Å–ª—É–≥–∞–º–∏...")
        
        # –ü–æ–ª—É—á–∞–µ–º —É—Å–ª—É–≥–∏ —Å–∞–ª–æ–Ω–∞ 1
        cursor.execute("SELECT id FROM services WHERE salon_id = 1")
        service_ids = [row[0] for row in cursor.fetchall()]
        
        print(f"   –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: {len(service_ids)}")
        
        # –ö–∞–∂–¥—ã–π –º–∞—Å—Ç–µ—Ä –º–æ–∂–µ—Ç –æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏
        for master_id in master_ids:
            for service_id in service_ids:
                cursor.execute("""
                    INSERT OR IGNORE INTO master_services (master_id, service_id)
                    VALUES (?, ?)
                """, (master_id, service_id))
            print(f"   –ú–∞—Å—Ç–µ—Ä {master_id} –º–æ–∂–µ—Ç –æ–∫–∞–∑—ã–≤–∞—Ç—å {len(service_ids)} —É—Å–ª—É–≥")
        
        # 3. –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤
        print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤...")
        
        # –†–∞–±–æ—á–∏–µ –¥–Ω–∏: –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ø—è—Ç–Ω–∏—Ü–∞ (1-5)
        working_days = [1, 2, 3, 4, 5]
        
        for master_id in master_ids:
            for day in working_days:
                # –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 9:00 - 18:00
                cursor.execute("""
                    INSERT OR IGNORE INTO availability_slots 
                    (owner_type, owner_id, day_of_week, start_time, end_time)
                    VALUES (?, ?, ?, ?, ?)
                """, ('master', master_id, day, '09:00:00', '18:00:00'))
            print(f"   –ú–∞—Å—Ç–µ—Ä {master_id}: –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –¥–Ω–∏ {working_days}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—Å–∞–ª–æ–Ω
        cursor.execute("SELECT COUNT(*) FROM salon_masters WHERE salon_id = 1")
        salon_masters_count = cursor.fetchone()[0]
        print(f"   –ú–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–∞–ª–æ–Ω–µ 1: {salon_masters_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞
        cursor.execute("SELECT COUNT(*) FROM master_services")
        master_services_count = cursor.fetchone()[0]
        print(f"   –°–≤—è–∑–µ–π –º–∞—Å—Ç–µ—Ä-—É—Å–ª—É–≥–∞: {master_services_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        cursor.execute("SELECT COUNT(*) FROM availability_slots WHERE owner_type = 'master'")
        availability_slots_count = cursor.fetchone()[0]
        print(f"   –°–ª–æ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–∞—Å—Ç–µ—Ä–æ–≤: {availability_slots_count}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    setup_test_data()
