#!/bin/bash

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Appointo
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –±—ç–∫–∞–ø–∞–º–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    print_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p backups

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
create_backup() {
    local backup_name="backup_$(date +%Y%m%d_%H%M%S).db"
    print_step "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä backend –∑–∞–ø—É—â–µ–Ω
    if ! docker-compose ps backend | grep -q "Up"; then
        print_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä backend –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ docker-compose up -d"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    docker-compose exec backend cp /app/bookme.db /app/$backup_name
    docker-compose cp backend:/app/$backup_name ./backups/
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞
    local backup_size=$(ls -lh backups/$backup_name | awk '{print $5}')
    print_status "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: backups/$backup_name (—Ä–∞–∑–º–µ—Ä: $backup_size)"
    
    echo $backup_name
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–≥—Ä–∞—Ü–∏–π
check_migrations() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    local current_version=$(docker-compose exec backend alembic current 2>/dev/null | grep -o '[a-f0-9]\{12\}' || echo "none")
    local head_version=$(docker-compose exec backend alembic heads 2>/dev/null | grep -o '[a-f0-9]\{12\}' || echo "none")
    
    print_status "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: $current_version"
    print_status "–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: $head_version"
    
    if [ "$current_version" != "$head_version" ]; then
        print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏. –û–Ω–∏ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
        return 0
    else
        print_status "–ú–∏–≥—Ä–∞—Ü–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã."
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
apply_migrations() {
    print_step "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    docker-compose exec backend alembic upgrade head
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    local integrity_check=$(docker-compose exec backend sqlite3 /app/bookme.db "PRAGMA integrity_check;" 2>/dev/null)
    
    if [ "$integrity_check" = "ok" ]; then
        print_status "–ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏."
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: $integrity_check"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
update_application() {
    print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ Git..."
    git pull origin main
    
    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
    print_status "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose build --no-cache
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print_status "–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose up -d
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
check_health() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    if ! docker-compose ps | grep -q "Up"; then
        print_error "–ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
        docker-compose ps
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
    if curl -f http://localhost:8000/health >/dev/null 2>&1; then
        print_status "API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Frontend
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend..."
    if curl -f http://localhost:5173 >/dev/null 2>&1; then
        print_status "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_warning "Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    local user_count=$(docker-compose exec backend sqlite3 /app/bookme.db "SELECT COUNT(*) FROM users;" 2>/dev/null || echo "0")
    print_status "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: $user_count"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞
rollback() {
    print_error "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é –∫–æ–¥–∞
    git checkout HEAD~1
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose up -d
    
    print_warning "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã."
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_status "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π Appointo..."
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    local backup_name=$(create_backup)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    if check_migrations; then
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        apply_migrations
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    update_application
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
    if check_health; then
        print_status "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        print_status "–ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: backups/$backup_name"
    else
        print_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
        rollback
        exit 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'print_error "–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –¥–µ–ø–ª–æ—è..."; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
