import { useState, useEffect } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import { Button } from '../components/ui'
import Tabs from '../components/ui/Tabs'
import Header from '../components/Header'

export default function BranchManagementPage() {
  const { branchId } = useParams()
  const navigate = useNavigate()
  const [branch, setBranch] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [activeTab, setActiveTab] = useState('basic')

  const tabs = [
    { id: 'basic', label: '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' },
    { id: 'schedule', label: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã' },
    { id: 'website', label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–º' }
  ]

  const getAuthHeaders = () => {
    const token = localStorage.getItem('access_token')
    return {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    }
  }

  const loadBranchData = async () => {
    try {
      setLoading(true)
      const response = await fetch(`/salon/my-managed-branches`, {
        headers: getAuthHeaders()
      })
      
      if (response.ok) {
        const branches = await response.json()
        const currentBranch = branches.find(b => b.id === parseInt(branchId))
        
        if (currentBranch) {
          setBranch(currentBranch)
        } else {
          setError('–§–∏–ª–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º')
        }
      } else if (response.status === 401) {
        navigate('/')
        return
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª–∏–∞–ª–∞')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª–∏–∞–ª–∞:', error)
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª–∏–∞–ª–∞')
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    loadBranchData()
  }, [branchId])

  if (loading) {
    return (
      <div className="min-h-screen bg-white">
        <Header />
        <div className="flex justify-center items-center h-screen">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-[#4CAF50] mx-auto"></div>
            <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen bg-white">
        <Header />
        <div className="flex justify-center items-center h-screen">
          <div className="text-center">
            <h1 className="text-2xl font-bold text-gray-900 mb-4">–û—à–∏–±–∫–∞</h1>
            <p className="text-gray-600 mb-6">{error}</p>
            <button
              onClick={() => navigate('/client/dashboard')}
              className="bg-[#4CAF50] text-white px-6 py-2 rounded-lg hover:bg-[#45A049]"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </button>
          </div>
        </div>
      </div>
    )
  }

  if (!branch) {
    return (
      <div className="min-h-screen bg-white">
        <Header />
        <div className="flex justify-center items-center h-screen">
          <div className="text-center">
            <h1 className="text-2xl font-bold text-gray-900 mb-4">–ù–µ –Ω–∞–π–¥–µ–Ω–æ</h1>
            <p className="text-gray-600 mb-6">–§–∏–ª–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
            <button
              onClick={() => navigate('/client/dashboard')}
              className="bg-[#4CAF50] text-white px-6 py-2 rounded-lg hover:bg-[#45A049]"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </button>
          </div>
        </div>
      </div>
    )
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const BasicInfoTab = () => (
    <div className="space-y-6">
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª–∏–∞–ª–µ */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª–∏–∞–ª–µ</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
            <p className="text-gray-900 font-medium">{branch.name}</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">–ê–¥—Ä–µ—Å</label>
            <p className="text-gray-900">{branch.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</label>
            <p className="text-gray-900">{branch.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">Email</label>
            <p className="text-gray-900">{branch.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç</label>
            <p className="text-gray-900">{branch.places_count || 0}</p>
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">–°—Ç–∞—Ç—É—Å</label>
            <span className={`inline-block px-2 py-1 rounded text-xs ${
              branch.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
            }`}>
              {branch.is_active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
            </span>
          </div>
        </div>
        {branch.description && (
          <div className="mt-4">
            <label className="block text-sm font-medium text-gray-700 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ</label>
            <p className="text-gray-900">{branch.description}</p>
          </div>
        )}
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => navigate(`/places/dashboard?branch=${branch.id}`)}
            className="p-4 border border-[#4CAF50] rounded-lg hover:bg-[#DFF5EC] transition-colors text-left"
          >
            <div className="text-[#4CAF50] text-2xl mb-2">üè¢</div>
            <h3 className="font-medium text-gray-900 mb-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞–º–∏</h3>
            <p className="text-sm text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç –∏ –∏—Ö –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏</p>
          </button>
          
          <button
            onClick={() => navigate(`/masters/dashboard?branch=${branch.id}`)}
            className="p-4 border border-[#4CAF50] rounded-lg hover:bg-[#DFF5EC] transition-colors text-left"
          >
            <div className="text-[#4CAF50] text-2xl mb-2">üë®‚Äçüíº</div>
            <h3 className="font-medium text-gray-900 mb-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞–º–∏</h3>
            <p className="text-sm text-gray-600">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤ —Ñ–∏–ª–∏–∞–ª–∞</p>
          </button>
          
          <button
            onClick={() => navigate(`/schedule/dashboard?branch=${branch.id}`)}
            className="p-4 border border-[#4CAF50] rounded-lg hover:bg-[#DFF5EC] transition-colors text-left"
          >
            <div className="text-[#4CAF50] text-2xl mb-2">üìÖ</div>
            <h3 className="font-medium text-gray-900 mb-1">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã</h3>
            <p className="text-sm text-gray-600">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</p>
          </button>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–ª–∏–∞–ª–∞</h2>
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="text-center p-4 bg-[#DFF5EC] rounded-lg">
            <div className="text-2xl font-bold text-[#4CAF50]">{branch.places_count || 0}</div>
            <div className="text-sm text-[#2E7D32]">–†–∞–±–æ—á–∏—Ö –º–µ—Å—Ç</div>
          </div>
          <div className="text-center p-4 bg-blue-50 rounded-lg">
            <div className="text-2xl font-bold text-blue-600">0</div>
            <div className="text-sm text-blue-700">–ú–∞—Å—Ç–µ—Ä–æ–≤</div>
          </div>
          <div className="text-center p-4 bg-green-50 rounded-lg">
            <div className="text-2xl font-bold text-green-600">0</div>
            <div className="text-sm text-green-700">–ó–∞–ø–∏—Å–µ–π —Å–µ–≥–æ–¥–Ω—è</div>
          </div>
          <div className="text-center p-4 bg-purple-50 rounded-lg">
            <div className="text-2xl font-bold text-purple-600">0</div>
            <div className="text-sm text-purple-700">–î–æ—Ö–æ–¥ –∑–∞ –º–µ—Å—è—Ü</div>
          </div>
        </div>
      </div>
    </div>
  )

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
  const ScheduleTab = () => (
    <div className="space-y-6">
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Ñ–∏–ª–∏–∞–ª–∞</h2>
        <p className="text-gray-600 mb-4">
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
        </p>
        
        {/* –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è */}
        <div className="bg-gray-50 rounded-lg p-6 text-center">
          <div className="text-gray-400 text-4xl mb-2">üìÖ</div>
          <p className="text-gray-500">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ</p>
        </div>
      </div>
    </div>
  )

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–æ–º
  const WebsiteTab = () => (
    <div className="space-y-6">
      <div className="bg-white rounded-lg shadow p-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–º —Ñ–∏–ª–∏–∞–ª–∞</h2>
        <p className="text-gray-600 mb-4">
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ñ–∏–ª–∏–∞–ª–∞
        </p>
        
        {/* URL slug */}
        <div className="mb-6">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ù–∞–∑–≤–∞–Ω–∏–µ –≤ URL
          </label>
          <div className="flex items-center space-x-2">
            <span className="text-sm text-gray-500">sitename.dedato.ru/</span>
            <span className="text-lg font-medium text-gray-900">
              {branch.url_slug || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
            </span>
          </div>
        </div>

        {/* –¶–≤–µ—Ç —Ñ–æ–Ω–∞ */}
        {branch.background_color && (
          <div className="mb-6">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –¶–≤–µ—Ç —Ñ–æ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            </label>
            <div className="flex items-center space-x-3">
              <div 
                className="w-12 h-12 border rounded"
                style={{ backgroundColor: branch.background_color }}
              ></div>
              <span className="text-gray-900">{branch.background_color}</span>
            </div>
          </div>
        )}

        {/* –õ–æ–≥–æ—Ç–∏–ø */}
        <div className="mb-6">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –õ–æ–≥–æ—Ç–∏–ø —Ñ–∏–ª–∏–∞–ª–∞
          </label>
          {branch.use_salon_logo ? (
            <p className="text-gray-600">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–≥–æ—Ç–∏–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</p>
          ) : branch.logo_path ? (
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø</p>
          ) : (
            <p className="text-gray-500">–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</p>
          )}
        </div>

        {/* –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∞ */}
        {branch.yandex_map_embed && (
          <div className="mb-6">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞
            </label>
            <div className="bg-gray-50 rounded-lg p-4">
              <p className="text-sm text-gray-600">–ö–∞—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="pt-4">
          <button
            onClick={() => navigate(`/branch/edit/${branch.id}`)}
            className="bg-[#4CAF50] text-white px-6 py-2 rounded-lg hover:bg-[#45A049]"
          >
            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
          </button>
        </div>
      </div>
    </div>
  )

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const renderActiveTab = () => {
    switch (activeTab) {
      case 'basic':
        return <BasicInfoTab />
      case 'schedule':
        return <ScheduleTab />
      case 'website':
        return <WebsiteTab />
      default:
        return <BasicInfoTab />
    }
  }

  return (
    <div className="min-h-screen bg-white">
      <Header />
      <div className="pt-[140px] p-8">
        <div className="max-w-6xl mx-auto">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="flex justify-between items-center mb-8">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª–∏–∞–ª–æ–º</h1>
              <p className="text-gray-600 mt-2">
                {branch.name} ‚Ä¢ {branch.address || '–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω'}
              </p>
            </div>
            <button
              onClick={() => navigate('/client/dashboard')}
              className="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
            </button>
          </div>

          {/* –í–∫–ª–∞–¥–∫–∏ */}
          <div className="bg-white rounded-lg shadow mb-6">
            <div className="p-6">
              <Tabs tabs={tabs} activeTab={activeTab} onTabChange={setActiveTab} />
            </div>
          </div>

          {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
          {renderActiveTab()}
        </div>
      </div>
    </div>
  )
}
