#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
"""

import requests
from urllib.parse import quote

# –ë–∞–∑–æ–≤—ã–π URL API
API_BASE = "http://localhost:8001/api/extract-address"

def test_short_links():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏
    short_links = [
        "https://yandex.ru/maps/-/CHXXEC87",
        "https://yandex.ru/maps/-/CCuC8K~",
        "https://yandex.ru/maps/-/CCuC8K~",
        "https://yandex.ru/maps/-/CCuC8K~",
    ]
    
    for i, url in enumerate(short_links, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {url}")
        print("-" * 50)
        
        try:
            response = requests.get(f"{API_BASE}?url={quote(url)}", timeout=30)
            print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
            if response.status_code == 200:
                data = response.json()
                if data.get("success"):
                    print(f"‚úÖ –£–°–ü–ï–•: {data['address']}")
                else:
                    print(f"‚ùå –û–®–ò–ë–ö–ê: {data.get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            else:
                print(f"‚ùå HTTP {response.status_code}: {response.text}")
                
        except requests.exceptions.Timeout:
            print("‚è∞ –¢–ê–ô–ú–ê–£–¢: –ó–∞–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è")
        except requests.exceptions.ConnectionError:
            print("üîå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        except Exception as e:
            print(f"üí• –û–®–ò–ë–ö–ê: {str(e)}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç")
    print("=" * 60)
    test_short_links() 